@page "/Asignaturas"
@using Client.Interfaces
@inject IGradoService GradoService
@inject IAlumnosService AlumnoService
@inject ISnackbar Snackbar

<h3>Asignar Alumno a Grado</h3>

<MudSelect T="string" MultiSelection="false" SelectAll="false" SelectAllText="Seleccione Alumnos" @bind-Value="AlumnoValue" @bind-SelectedValues="_selectedAlumnos" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))" Label="Seleccion Alumno" AdornmentIcon="@Icons.Material.Filled.Search">
    @foreach (var alumno in _alumnos)
    {
        <MudSelectItem T="string" Value="@alumno.Id.ToString()">@alumno.Nombre @alumno.Apellidos</MudSelectItem>
    }
</MudSelect>

<MudSelect T="string" MultiSelection="false" SelectAll="false" SelectAllText="Seleccione Grados" @bind-Value="GradoValue" @bind-SelectedValues="_selectedGrados" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))" Label="Seleccion Grado" AdornmentIcon="@Icons.Material.Filled.Search">
    @foreach (var grado in _grados)
    {
        <MudSelectItem T="string" Value="@grado.Id.ToString()">@grado.Nombre @grado.Seccion</MudSelectItem>
    }
</MudSelect>

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AssignAlumno">Agregar Alumno</MudButton>

@code {
    private List<Alumno> _alumnos = [];
    private List<Grado> _grados = [];
    private IEnumerable<string> _selectedAlumnos = [];
    private IEnumerable<string> _selectedGrados = [];
    private string AlumnoValue { get; set; } = "Seleccione alumno";
    private string GradoValue { get; set; } = "Seleccione grado";
    
    protected override async Task OnInitializedAsync()
    {
        var allAlumnosAsync = await AlumnoService.GetAllAlumnosAsync();
        _alumnos = allAlumnosAsync.Data;
        
        if (_alumnos.Count > 0)
        {
            Snackbar.Add("Alumnos Cargados");
        }
        else
        {
            Snackbar.Add("No hay alumnos", Severity.Error);
        }
        
        var allGradosAsync = await GradoService.GetAllGradosAsync();
        _grados = allGradosAsync.Data;
        
        
        if (_grados.Count > 0)
        {
            Snackbar.Add("Grados Cargados");
        }
        else
        {
            Snackbar.Add("Grados No cargados", Severity.Error);
        }
    }
    
    private string GetMultiSelectionText(List<string> selectedValues)
    {
        return $"{selectedValues.Count}";
    }

    async void AssignAlumno()
    {
        var alumnosSeleccionados = _alumnos;
        var gradosSeleccionados = _grados;
    }
}